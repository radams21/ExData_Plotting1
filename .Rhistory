?solve
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() {x}
setinv <- function(inv) {m <<- inv}
getinv <- function() {m}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## Write a short comment describing this function
## input a list from cache. call solve() to calculate the inverse
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv_matrix <- x$getinv()
if(!is.null(inv_matrix)) {
message("getting cached data")
return(inv_matrix)
}
data <- x$get()
inv_matrix <- solve(data)
x$setinv(inv_matrix)
inv_matrix
}
x <- matrix(c(1,2,3,4),2,2)
x
solve(x)
x1 = makeCacheMatrix(x)
z1
x1
x1$getinv
x1$setinv
cacheSolve(x1)
cacheSolve(x1)
?download.file
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
q1
q1()
q1()
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
csv_file = "/users/rachel/documents/coursera/getdata-008/quiz1/input1.csv"
download.file(url, destfile = csv_file, method="curl")
names(csv_file)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
download.file(url, destfile = csv_file, method="curl")
names(csv_file)
csv_file
table1 = read.csv(csv_file)
names(table1)
names(table1)
answer = max(table1$VAL)
answer
answer = max(table1$VAL, na.rm=T)
answer
answer = nrow(table1[table1$VAL == 24,])
answer
max_val_prop = table1[table1$VAL == 24,]
View(max_val_prop)
full_table = complete.cases(table1)
full_table = complete.cases(table1)
max_val_prop = full_table[full_table$VAL == 24,]
full_table = complete.cases(table1)
full_table
full_table = table1[complete.cases(table1),]
full_table = table1[complete.cases(table1)]
full_table = table1[complete.cases(table1),]
View(full_table)
full_table = table1[!is.na(table1$VAL),]
max_val_prop = full_table[full_table$VAL == 24,]
nrow(max_val_prop)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
q1()
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
tsv_file = "/users/rachel/documents/coursera/getdata-008/quiz1/input2.tsv"
download.file(url, destfile = tsv_File, method="curl")
table1 = read.csv(tsv_file)
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
tsv_file = "/users/rachel/documents/coursera/getdata-008/quiz1/input2.tsv"
download.file(url, destfile = tsv_file, method="curl")
table1 = read.csv(tsv_file)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
install.packages("xlsx")
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
xlsx_file = "/users/rachel/documents/coursera/getdata-008/quiz1/input2.xlsx"
download.file(url, destfile = xlsx_file, method="curl")
table1 = read.xlsx(xlsx_file, sheetIndex=1, header=TRUE)
head(table1)
colIndex <- 7:15
rowIndex <- 18:23
table1 = read.xlsx(xlsx_file, sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex, header=TRUE)
head(table1)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
# Read rows 18-23 and columns 7-15
colIndex <- 7:15
rowIndex <- 18:23
dat = read.xlsx(xlsx_file, sheetIndex=1, colIndex = colIndex, rowIndex = rowIndex, header=TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
install.packages("XML")
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
doc = xmlTreeParse(url, useInternal=TRUE)
rootNode = xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
library(XML)
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc = xmlTreeParse(url, useInternal=TRUE)
doc = xmlTreeParse(xml_file, useInternal=TRUE)
rootNode = xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
xmlSApply(rootNode[@zipcode = '21231'], name)
xmlSApply(rootNode,"//zipcode", xmlValue)
xmlSApply(rootNode,"//row//zipcode", xmlValue)
xpathSApply(rootNode,"//zipcode", xmlValue)
my_zipcode = zipcodes[zipcodes == "21231"]
zipcodes = xpathSApply(rootNode,"//zipcode", xmlValue)
my_zipcode = zipcodes[zipcodes == "21231"]
my_zipcode
length(my_zipcode)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
csv_file = "/users/rachel/documents/coursera/getdata-008/quiz1/input4.csv"
download.file(url, destfile = csv_file, method="curl")
table4 = read.csv(csv_file)
?fread
install.packages("data.table")
?fread
?data.table
??fread
DT = fread(csv_file)
library(data.table)
DT = fread(csv_file)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
a1 = mean(DT$pwgtp15,by=DT$SEX)
a2 = DT[,mean(pwgtp15),by=SEX]
a3 = sapply(split(DT$pwgtp15,DT$SEX),mean)
a4 = rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
a5 = tapply(DT$pwgtp15,DT$SEX,mean)
a6 = mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
a1 = mean(DT$pwgtp15,by=DT$SEX)
a1
a2 = DT[,mean(pwgtp15),by=SEX]
a2
a3 = sapply(split(DT$pwgtp15,DT$SEX),mean)
a3
a5
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
t1 = system.time(mean(DT$pwgtp15,by=DT$SEX))
t1[1]
t1[2]
t1[3]
t1
t2 = system.time(DT[,mean(pwgtp15),by=SEX])
t2
time2 = c(t2[1],"2")
time1 = c(t1[1],"1")
min(time1[1],time2[1])
df = t1
df = rbind(t2)
df
df = t1
df
t1
t2
df = rbind(df, t2)
df
df = rbind(t1, t2)
df
t3 = system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
df = rbind(df, t3)
df
t3
t2
a2
a3
a1
t4 = system.time(tapply(DT$pwgtp15,DT$SEX,mean))
t4
t4 = system.time(tapply(DT$pwgtp15,DT$SEX,mean))
t5a = system.time(mean(DT[DT$SEX==1,]$pwgtp15))
t5b = system.time(mean(DT[DT$SEX==2,]$pwgtp15))
df = rbind(df, t4)
df
df = rbind(df, t5a)
df = rbind(df, t5b)
df
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
install.packages("jsonlite")
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
ans = q5
ans
ans = q5()
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
ans = q5()
ans
min(ans$elapsed)
ans$elapsed
type(ans)
names(ans)
as = data.frame(ans)
as
as$elapsed
min(as$elapsed)
min(as$elapsed)$row.name
as$name = row.name
as$name = row.name()
as$name = as.rownames()
names(as)
row.names(as)
as$name = row.names(as)
as
min(as$elapsed)$name
min(as$elapsed)
min_row = [as$elapsed == min(as$elapsed),as$name]
min_row = as[as$elapsed == min(as$elapsed),as$name]
min_row = as[as$elapsed == min(as$elapsed),name]
min_row = as[as$elapsed == min(as$elapsed),c("name")]
min_row
as$answers = c(a1, a2, a3, a5, a6)
as
df$answers = c(a1, a2, a3, a4, a6a, a6b)
a1 = mean(DT$pwgtp15,by=DT$SEX)
a2 = DT[,mean(pwgtp15),by=SEX]
a3 = sapply(split(DT$pwgtp15,DT$SEX),mean)
#a4 = rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
a4 = tapply(DT$pwgtp15,DT$SEX,mean)
a6a = mean(DT[DT$SEX==1,]$pwgtp15)
a6b = mean(DT[DT$SEX==2,]$pwgtp15)
df$answers = c(a1, a2, a3, a4, a6a, a6b)
df = rbind(t1, t2)
df = rbind(df, t3)
df = rbind(df, t4)
df = rbind(df, t5a)
df = rbind(df, t5b)
df = as.data.frame(df)
df$answers = c(a1, a2, a3, a4, a6a, a6b)
dff
df
answers = c(a1, a2, a3, a4, a6a, a6b)
answers
answers = c(a1, a2, a3, a4, as.list(a6a, a6b))
answers
answers = as.list(a1, a2, a3, a4, as.list(a6a, a6b))
answers
answers = as.list(a1, a2, a3, a4, a6a, a6b)
answers
answers = c(a1, a2, a3, a4, a6a, a6b)
answers
a1
a2
b2 = as.list(a2)
b2
b2[1]
b2[2]
a3
answers = c(a1, as.list(a2)[2], a3, a4, a6a, a6b)
answers
b3 = as.list(a3)
b3
b2
b3 = as.matrix(a3)
b3
b2 = as.matrix(a2)
b2
b2 = as.matrix(a2$V1)
b2
a4
b4 = as.matrix(a4)
b4
a6a
as.matrix(c(a6a,a6b))
answers = c(a1, as.matrix(a2$V1), as.matrix(a3), as.matrix(a4), as.matrix(a6a, a6b))
answers
answers = as.list(a1, as.matrix(a2$V1), as.matrix(a3), as.matrix(a4), as.matrix(a6a, a6b))
ansers
answers
b2
as.list(b2)
answers = c(a1, as.list(as.matrix(a2$V1)), as.list(as.matrix(a3)), as.list(as.matrix(a4)), as.list(as.matrix(a6a, a6b)))
answers
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
source('~/Documents/Coursera/getdata-008/quiz1/quiz1.R')
library(data.table)
data_file = "household_power_consumption.txt"
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
#names(DT)
DT$Date = as.Date(DT$Date,"%d/%m/%Y")
#head(DT$Date)
# We will only be using data from the dates 2007-02-01 and 2007-02-02.
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
DT_small$DateTime = "?"
my_time_list = strptime(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")
#
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small[,c("Seconds") := as.Date(DT_small$DateTime, "%Y-%m-%d %H:%M:%S")]
DT_small[,c("Days") := weekdays(as.Date(DT_small$DateTime), abbreviate=TRUE)]
setwd("~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1")
library(data.table)
data_file = "household_power_consumption.txt"
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
#names(DT)
DT$Date = as.Date(DT$Date,"%d/%m/%Y")
#head(DT$Date)
# We will only be using data from the dates 2007-02-01 and 2007-02-02.
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
DT_small$DateTime = "?"
my_time_list = strptime(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")
#
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small[,c("Seconds") := as.Date(DT_small$DateTime, "%Y-%m-%d %H:%M:%S")]
DT_small[,c("Days") := weekdays(as.Date(DT_small$DateTime), abbreviate=TRUE)]
library(data.table)
data_file = "household_power_consumption.txt"
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
setwd("~/Documents/Coursera/exdata-007/ExData_Plotting1")
library(data.table)
data_file = "household_power_consumption.txt"
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
DT$Date = as.Date(DT$Date,"%d/%m/%Y")
#head(DT$Date)
# We will only be using data from the dates 2007-02-01 and 2007-02-02.
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
DT_small$DateTime = "?"
my_time_list = strptime(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")
head(DT_small$DateTime)
head(my_time_list)
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small[,c("Days") := weekdays(as.Date(DT_small$DateTime), abbreviate=TRUE)]
head(DT_small$Days)
plot(DT_small$Seconds, DT_small$Sub_metering_1, type="l", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
#axis(1, at=c(min(DT_small$Seconds),mean(DT_small$Seconds),max(DT_small$Seconds)),labels=c("Thu", "Fri", "Sat"))
axis(1, labels=DT_small$Days)
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small[,c("Seconds") := as.Date(DT_small$DateTime, "%Y-%m-%d %H:%M:%S")]
DT_small[,c("Days") := weekdays(as.Date(DT_small$DateTime), abbreviate=TRUE)]
plot(DT_small$Seconds, DT_small$Sub_metering_1, type="l", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
axis(1, labels=DT_small$Days)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1)
plot(DT_small$Seconds, DT_small$Sub_metering_1, type="l", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
#axis(1, at=c(min(DT_small$Seconds),mean(DT_small$Seconds),max(DT_small$Seconds)),labels=c("Thu", "Fri", "Sat"))
axis(1, labels=DT_small$Days)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1)
?plot
?labs
?axis
axis(1, at=c(min(DT_small$Seconds),mean(DT_small$Seconds),max(DT_small$Seconds)), labels=DT_small$Days)
plot(DT_small$Seconds, DT_small$Sub_metering_1, type="l", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Seconds, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
library(data.table)
data_file = "household_power_consumption.txt"
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
#names(DT)
DT$Date = as.Date(DT$Date,"%d/%m/%Y")
#head(DT$Date)
# We will only be using data from the dates 2007-02-01 and 2007-02-02.
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
hist(as.numeric(DT_small$Global_active_power), col="red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small[,c("Seconds") := as.Date(DT_small$DateTime, "%Y-%m-%d %H:%M:%S")]
DT_small[,c("Days") := weekdays(as.Date(DT_small$DateTime), abbreviate=TRUE)]
plot(DT_small$Seconds, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
head(DT_small$Global_active_power)
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time))]
head(DT_small$DateTime)
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
DT_small[,c("DateTime") := strptime(paste(DT_small$Date, DT_small$Time))]
DT_small[,c("DateTime") := strptime(paste(DT_small$Date, DT_small$Time),format="")]
?strptime
DT_small[,c("DateTime") := strptime(paste(DT_small$Date, DT_small$Time),format=""%Y-%m-%d %H:%M:%S"")]
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time),"%Y-%m-%d %H:%M:%S")]
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
axis(1, at=c(min(DT_small$Seconds),mean(DT_small$Seconds),max(DT_small$Seconds)),labels=c("Thu", "Fri", "Sat"))
DT_small[,c("DateTime") := strptime(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
DT_small[,c("DateTime") := strptime(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
head(DT_small$DateTime)
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
head(DT_small$DateTime)
DT_small$Global_active_power = as.numeric(DT_small$Global_active_power)
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
head(DT_small$Global_active_power)
head(DT_small$DateTime)
class(DT_small$DateTime)
DT_small$DateTime = as.Date(DT_small$DateTime)
class(DT_small$DateTime)
head(DT_small$DateTime)
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
as.Date?
-
1
?as.Posixct
?as.posix
??as.posix
DT_small$DateTime = as.POSIXct(DT_small$DateTime)
class(DT_small$DateTime)
head(DT_small$DateTime)
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small$DateTime = as.POSIXct(DT_small$DateTime)
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
rm()
ls()
plot()
dev.off()
data_file = "household_power_consumption.txt"
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
DT$Date = as.Date(DT$Date,"%d/%m/%Y")
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
DT_small[,c("DateTime") := format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S")]
DT_small$DateTime = as.POSIXct(DT_small$DateTime)
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
source('~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1/plot2.R')
setwd("~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1")
data_file = "household_power_consumption.txt"
if(! file.exists(data_file)) {
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip_file = "household_power_consumption.zip"
download.file(url, destfile = zip_file, method="curl")
unzip_file(zip_file)
}
unzip_(zip_file)
unzip(zip_file)
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric')
DT = fread(data_file, colClasses=colClasses, na.strings=c("NA","N/A","","?"))
DT$Date = as.Date(DT$Date,"%d/%m/%Y")
# We will only be using data from the dates 2007-02-01 and 2007-02-02.
DT_small = DT[Date >= "2007-02-01",]
DT_small = DT_small[Date <= "2007-02-02",]
# Remove the large dataset from memory; we will only work with the subset table
rm(DT)
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
head(DT_small$DateTime)
DT_small[,c("DateTime") := as.POSIXct(format(paste(DT_small$Date, DT_small$Time), format="%Y-%m-%d %H:%M:%S"))]
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
dev.off()
plot(DT_small$DateTime, DT_small$Global_active_power, type="l",  xlab="", ylab = "Global Active Power (kilowatts)")
plot(DT_small$Seconds, DT_small$Sub_metering_1, type="l", xlab="", ylab = "Energy sub metering")
plot(DT_small$DateTime, DT_small$Sub_metering_1, type="l", xlab="", ylab = "Energy sub metering")
plot(DT_small$DateTime, DT_small$Sub_metering_1, type="l", xlab="", ylab = "Energy sub metering")
lines(DT_small$DateTime, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$Date_Time, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$DateTime, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
plot(DT_small$DateTime, DT_small$Sub_metering_1, type="l", xlab="", ylab = "Energy sub metering")
lines(DT_small$DateTime, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$DateTime, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1)
plot(DT_small$Seconds, DT_small$Global_active_power, type="l", xlab="", ylab = "Global Active Power")
par(mfrow=c(2,2))
# code from plot2.png
plot(DT_small$DateTime, DT_small$Global_active_power, type="l", xlab="", ylab = "Global Active Power")
# modified code from plot2.png
plot(DT_small$DateTime, DT_small$Voltage, type="l", xlab="datetime", ylab = "Voltage")
plot(DT_small$DateTime, DT_small$Sub_metering_1, type="l", xlab="", ylab = "Energy sub metering")
lines(DT_small$DateTime, DT_small$Sub_metering_2, type="l", col="red", xaxt="n", xlab="", ylab = "Energy sub metering")
lines(DT_small$DateTime, DT_small$Sub_metering_3, type="l", col="blue", xaxt="n", xlab="", ylab = "Energy sub metering")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=1, bty="n")
plot(DT_small$DateTime, DT_small$Global_reactive_power, type="l", xlab="datetime", ylab = "Global_reactive_power")
dev.off()
source('~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1/plot1.R')
source('~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1/plot2.R')
source('~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1/plot3.R')
source('~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1/plot4.R')
source('~/Documents/Coursera/exdata-007/ExData_Plotting1/ExData_Plotting1/plot1.R')
